# change prefix key from Contorl-b to Control-space
unbind C-b
set -g prefix C-Space

# disable visual bell and sound in tmux
set -g bell-action none
set -g visual-bell off

# don't wait for an escape sequence after hitting Esc.
# Fixes insert mode exit lag in vim
set -sg escape-time 0

# force tmux to see 256 colors instead of 8
# alternative is to specify 'xterm-256color'
# set -g default-terminal 'tmux-256color'
set -g default-terminal 'xterm-256color'

# allow mouse, and enable scroll inside tmux panes
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g mouse on

# Enable vi-like keybindings for navigating in a buffer
# e.g. when in copy mode
set-window-option -g mode-keys vi

# gcc specific binding; execute last command and return to pane'
# note the Control-M sequence that basically enters a carraige return
bind-key b last-pane \; send-keys -R \; send-keys Up C-m \; last-pane

# This is the list of currently installed tmux plugins
set -g @plugin 'tmux-plugins/tpm' #TPM plugin manager itself
set -g @plugin 'tmux-plugins/tmux-resurrect' #the famous resurrect plugin

# -------------------- 
# Note that we're using a "snippet" to load tmux navigator instead of usual
# tpm since we want to keep Prefix-hjkl so that bash Readline keybinds
# are kept intact.

# set -g @plugin 'christoomey/vim-tmux-navigator' #plugin to allow ctrl-j type movements

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key h if-shell "$is_vim" "send-keys C-Space h"  "select-pane -L"
bind-key j if-shell "$is_vim" "send-keys C-Space j"  "select-pane -D"
bind-key k if-shell "$is_vim" "send-keys C-Space k"  'select-pane -U'
bind-key l if-shell "$is_vim" "send-keys C-Space l"  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# Haven't figured out the issue with copy mode yet
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# -------------------- 

# This feature enables saving and restoring tmux pane contents, e.g output
# that has been generated in the panes. 
set -g @resurrect-capture-pane-contents 'on'

# This section restores any vim, neovim or other sessions in the tmux panes
set -g @resurrect-strategy-vim 'session' # for vim, needs Session.vim in ~/
set -g @resurrect-strategy-nvim 'session' # for neovim
set -g @resurrect-processes 'vifm' # for vifm

# Initialize TMUX plugin manager (keep this line at the very bottom always)!
# It runs the TPM plugin manager which in turns loads all the other plugins
# Note that for initial clean tmux setups and initializations, need to run
# prefix-I to download all the plugins from the github sources.
run '~/.tmux/plugins/tpm/tpm'

